grammar MT940;

@header {
	package org.schorpp;
	import java.util.HashMap;
}

@lexer::header {package org.schorpp;}

@members {
	HashMap sta = new HashMap();
}


prog:   (zeile20 zeile25 zeile28c zeile60f (zeile61 zeile86)* zeile62f zeile64 (DASH)?)+ EOF ;


zeile20	:	FELD20 daten { System.out.println($FELD20.getText() + ": " + $daten.value); };
zeile25	:	FELD25 bic(SLASH)konto;

zeile28c:	FELD28C daten(SLASH)daten? ;

zeile60f:	FELD60F FLAG(daten) { System.out.println($FELD60F.getText() + ": " + $daten.value); };
zeile61	:	FELD61 daten { System.out.println($FELD61.getText() + ": " + $daten.value); };
zeile86	:	FELD86 daten { System.out.println($FELD86.getText() + ": " + $daten.value); };
zeile62f:	FELD62F daten { System.out.println($FELD62F.getText() + ": " + $daten.value); };
zeile64	:	FELD64 daten { System.out.println($FELD64.getText() + ": " + $daten.value); };

bic	:	
	DIGIT+
	|
	WORD+
	;
	
konto	:	
	DIGIT+
	|WORD+
	;

FLAG	:	
	'D'{1}
		;

daten:
	WORD 
	;

FELD25	:	':25:';
FELD20	:	':20:';
FELD28C	:	':28C:';
FELD60F	:	':60F:';
FELD61	:	':61:';
FELD86	:	':86:';

FELD62F	:	':62F:';
FELD64	:	':64:';


WORD:	(
	'a'..'z'
	|'0'..'9'
	|'A'..'Z'
	|','
	|'?'
	|' '
	|'-'
	)+
;

SLASH	:	'/';

NEWLINE :	'\r\n' { skip();} ;

SPACE	:	' ' { skip(); } ;

DIGIT	:	'0'..'9';
DASH: '-';